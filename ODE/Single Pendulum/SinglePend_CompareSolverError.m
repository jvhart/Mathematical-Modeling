% Author: Jarod Hart
% Data: 11/15/17

% Description: This script uses Euler's method, Runge-Kutta order 2, and
% Runge-Kutta order 4 to find numerical solutions to a system of ODEs for a
% single pendulum.  The purpose is to compare the errors generated by the
% various solution techniques.

% Dependencies: Euler.m, RK2.m, RK4.m

% Resources:  A descrption of these equations can be found in physics
% textbooks or online.

addpath(genpath('../Numerical Solvers/'));

g=9.81; % force of gravity
L=5; % length of pendulum arm
M=7; % mass of point mass

theta_0=0; % initial angle of arm
omega_0=1; % initial angular velocity of arm

a=0; % start of time interval
b=20; % end of time interval
N=300; % number of points for solver

M=m1+m2; % total mass
F=@(t,y)[y(2),-g*sin(y(1))/L];
        % Function for the sysem of ODEs describing the single pendulum
        % (after reduction of order)

y0=[theta_0,omega_0]; % full initial condition

YEuler=Euler(a,b,N,y0,F); % solve using Euler
YRK2=RK2(a,b,N,y0,F); % solver using Runge-Kutta 2
YRK4=RK4(a,b,N,y0,F); % solver using Runge-Kutta 4

% parse the solution information
tEuler=YEuler(:,1)';
yEuler=YEuler(:,2)';
tRK2=YRK2(:,1);
yRK2=YRK2(:,2);
tRK4=YRK4(:,1);
yRK4=YRK4(:,2);

% make plots
figure
hold on
plot(yEuler,'r')
plot(yRK2,'r-.')
plot(yRK4,'r.')
title('Arm angle')
legend('Euler','Runge-Kutta 2','Runge-Kutta 4')

figure
plot(yEuler,'ro-')
title('Euler: First arm angle')

figure
plot(yRK2,'rx-')
title('Runge-Kutta 2: First arm angle')

figure
plot(yRK4,'r*-')
title('Runge-Kutta 4: First arm angle')



